requires "abstract-semantics.k"
requires "verification.k"

module BECTOKEN-TEST-BATCHTRANSFER-SPEC

imports ABSTRACT-SEMANTICS
imports VERIFICATION

// bectoken-test-batchtransfer 
rule
<kevm>
  <k> #execute => #halt </k>
  <exit-code> 1 </exit-code>
  <mode> NORMAL </mode>
  <schedule> PETERSBURG </schedule>
  <ethereum>
    <evm>
      <output> _ => _ </output>
      <statusCode> _ => SC </statusCode>
      <callStack> CALL_STACK </callStack>
      <interimStates> _ </interimStates>
      <touchedAccounts> _ => _ </touchedAccounts>
      <callState>
        <program> #parseByteStack("0x606060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063894922e914610046575b600080fd5b341561005157600080fd5b6100c4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506100c6565b005b6000806000806100d4610808565b6000806000803098508b73ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415151561011857600080fd5b8a73ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415151561015357600080fd5b8a73ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff161415151561018e57600080fd5b8c73ffffffffffffffffffffffffffffffffffffffff166370a082318a6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561023157600080fd5b6102c65a03f1151561024257600080fd5b5050506040518051905097508c73ffffffffffffffffffffffffffffffffffffffff166370a082318d6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156102f157600080fd5b6102c65a03f1151561030257600080fd5b5050506040518051905096508c73ffffffffffffffffffffffffffffffffffffffff166370a082318c6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156103b157600080fd5b6102c65a03f115156103c257600080fd5b50505060405180519050955060026040518059106103dd5750595b908082528060200260200182016040525094508b85600081518110151561040057fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508a85600181518110151561044c57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508c73ffffffffffffffffffffffffffffffffffffffff166383f12fec868c6000604051602001526040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015610523578082015181840152602081019050610508565b505050509050019350505050602060405180830381600087803b151561054857600080fd5b6102c65a03f1151561055957600080fd5b50505060405180519050935083156107f9578c73ffffffffffffffffffffffffffffffffffffffff166370a082318a6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561060e57600080fd5b6102c65a03f1151561061f57600080fd5b5050506040518051905092508c73ffffffffffffffffffffffffffffffffffffffff166370a082318d6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156106ce57600080fd5b6102c65a03f115156106df57600080fd5b5050506040518051905091508c73ffffffffffffffffffffffffffffffffffffffff166370a082318c6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561078e57600080fd5b6102c65a03f1151561079f57600080fd5b505050604051805190509050898a890303831415156107ba57fe5b898701821415156107c757fe5b898601811415156107d457fe5b8783111515156107e057fe5b8682101515156107ec57fe5b8581101515156107f857fe5b5b50505050505050505050505050565b6020604051908101604052806000815250905600a165627a7a7230582057b7cc0a6f2c96a2bcf084e3ed416544bd2dc81c0c57730b4bd0cd0260cbff680029") </program>
        <jumpDests> #computeValidJumpDests(#parseByteStack("0x606060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063894922e914610046575b600080fd5b341561005157600080fd5b6100c4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506100c6565b005b6000806000806100d4610808565b6000806000803098508b73ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415151561011857600080fd5b8a73ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415151561015357600080fd5b8a73ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff161415151561018e57600080fd5b8c73ffffffffffffffffffffffffffffffffffffffff166370a082318a6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561023157600080fd5b6102c65a03f1151561024257600080fd5b5050506040518051905097508c73ffffffffffffffffffffffffffffffffffffffff166370a082318d6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156102f157600080fd5b6102c65a03f1151561030257600080fd5b5050506040518051905096508c73ffffffffffffffffffffffffffffffffffffffff166370a082318c6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156103b157600080fd5b6102c65a03f115156103c257600080fd5b50505060405180519050955060026040518059106103dd5750595b908082528060200260200182016040525094508b85600081518110151561040057fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508a85600181518110151561044c57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508c73ffffffffffffffffffffffffffffffffffffffff166383f12fec868c6000604051602001526040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015610523578082015181840152602081019050610508565b505050509050019350505050602060405180830381600087803b151561054857600080fd5b6102c65a03f1151561055957600080fd5b50505060405180519050935083156107f9578c73ffffffffffffffffffffffffffffffffffffffff166370a082318a6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561060e57600080fd5b6102c65a03f1151561061f57600080fd5b5050506040518051905092508c73ffffffffffffffffffffffffffffffffffffffff166370a082318d6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156106ce57600080fd5b6102c65a03f115156106df57600080fd5b5050506040518051905091508c73ffffffffffffffffffffffffffffffffffffffff166370a082318c6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561078e57600080fd5b6102c65a03f1151561079f57600080fd5b505050604051805190509050898a890303831415156107ba57fe5b898701821415156107c757fe5b898601811415156107d457fe5b8783111515156107e057fe5b8682101515156107ec57fe5b8581101515156107f857fe5b5b50505050505050505050505050565b6020604051908101604052806000815250905600a165627a7a7230582057b7cc0a6f2c96a2bcf084e3ed416544bd2dc81c0c57730b4bd0cd0260cbff680029")) </jumpDests>
        <id> THIS </id> // this
        <caller> MSG_SENDER </caller> // msg.sender
        <callData> #abiCallData("test_batchTransfer", #address(TOKEN), #address(A2), #address(A3), #uint256(VALUE)) </callData> // msg.data
        <callValue> CALL_VALUE </callValue> // msg.value
        <wordStack> .WordStack => _ </wordStack>
        <localMem> .Map => _ </localMem>
        <pc> 0 => _ </pc>
        <gas> #infGas(0,0) => _ </gas>
        <memoryUsed> 0 => _ </memoryUsed>
        <callGas> _ => _ </callGas>
        <static> false </static> // NOTE: non-static call
        <callDepth> CALL_DEPTH </callDepth>
      </callState>
      <substate>
        <selfDestruct> _ </selfDestruct>
        <log> _ => _ </log>
        <refund> _ => _ </refund>
      </substate>
      <gasPrice> _ </gasPrice>
      <origin> ORIGIN_ID </origin> // tx.origin
      <blockhashes> BLOCK_HASHES </blockhashes> // block.blockhash
      <block>
        <previousHash> _ </previousHash>
        <ommersHash> _ </ommersHash>
        <coinbase> COIN_BASE </coinbase> // block.coinbase
        <stateRoot> _ </stateRoot>
        <transactionsRoot> _ </transactionsRoot>
        <receiptsRoot> _ </receiptsRoot>
        <logsBloom> _ </logsBloom>
        <difficulty> _ </difficulty>
        <number> BLOCK_NUM </number> // block.number
        <gasLimit> _ </gasLimit>
        <gasUsed> _ </gasUsed>
        <timestamp> NOW </timestamp> // now = block.timestamp
        <extraData> _ </extraData>
        <mixHash> _ </mixHash>
        <blockNonce> _ </blockNonce>
        <ommerBlockHeaders> _ </ommerBlockHeaders>
      </block>
    </evm>
    <network>
      <activeAccounts> SetItem(TOKEN) SetItem(THIS) SetItem(1) SetItem(2) SetItem(3) SetItem(4) SetItem(5) SetItem(6) SetItem(7) SetItem(8) _:Set </activeAccounts>
      <accounts>
        <account>
<acctID> TOKEN </acctID>
<balance> TOKEN_BALANCE => _ </balance>
<code> #parseByteStack("0x6060604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100f6578063095ea7b31461018457806318160ddd146101de57806323b872dd14610207578063313ce567146102805780633f4ba83a146102af57806354fd4d50146102c45780635c975abb1461035257806370a082311461037f57806383f12fec146103cc5780638456cb59146104475780638da5cb5b1461045c57806395d89b41146104b1578063a9059cbb1461053f578063dd62ed3e14610599578063f2fde38b14610605575b34156100f157600080fd5b600080fd5b341561010157600080fd5b61010961063e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014957808201518184015260208101905061012e565b50505050905090810190601f1680156101765780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561018f57600080fd5b6101c4600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506106dc565b604051808215151515815260200191505060405180910390f35b34156101e957600080fd5b6101f161070c565b6040518082815260200191505060405180910390f35b341561021257600080fd5b610266600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610712565b604051808215151515815260200191505060405180910390f35b341561028b57600080fd5b610293610744565b604051808260ff1660ff16815260200191505060405180910390f35b34156102ba57600080fd5b6102c2610757565b005b34156102cf57600080fd5b6102d7610817565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103175780820151818401526020810190506102fc565b50505050905090810190601f1680156103445780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561035d57600080fd5b6103656108b5565b604051808215151515815260200191505060405180910390f35b341561038a57600080fd5b6103b6600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506108c8565b6040518082815260200191505060405180910390f35b34156103d757600080fd5b61042d600480803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091908035906020019091905050610911565b604051808215151515815260200191505060405180910390f35b341561045257600080fd5b61045a610bad565b005b341561046757600080fd5b61046f610c6e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156104bc57600080fd5b6104c4610c94565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105045780820151818401526020810190506104e9565b50505050905090810190601f1680156105315780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561054a57600080fd5b61057f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610d32565b604051808215151515815260200191505060405180910390f35b34156105a457600080fd5b6105ef600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d62565b6040518082815260200191505060405180910390f35b341561061057600080fd5b61063c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610de9565b005b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106d45780601f106106a9576101008083540402835291602001916106d4565b820191906000526020600020905b8154815290600101906020018083116106b757829003601f168201915b505050505081565b6000600360149054906101000a900460ff161515156106fa57600080fd5b6107048383610f41565b905092915050565b60005481565b6000600360149054906101000a900460ff1615151561073057600080fd5b61073b848484611033565b90509392505050565b600760009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107b357600080fd5b600360149054906101000a900460ff1615156107ce57600080fd5b6000600360146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108ad5780601f10610882576101008083540402835291602001916108ad565b820191906000526020600020905b81548152906001019060200180831161089057829003601f168201915b505050505081565b600360149054906101000a900460ff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080600080600360149054906101000a900460ff1615151561093357600080fd5b85519250848302915060008311801561094d575060148311155b151561095857600080fd5b6000851180156109a7575081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b15156109b257600080fd5b610a0482600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113fe90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600090505b82811015610ba057610abd85600160008985815181101515610a6a57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461141790919063ffffffff16565b600160008884815181101515610acf57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508581815181101515610b2557fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040518082815260200191505060405180910390a38080600101915050610a4c565b6001935050505092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c0957600080fd5b600360149054906101000a900460ff16151515610c2557600080fd5b6001600360146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d2a5780601f10610cff57610100808354040283529160200191610d2a565b820191906000526020600020905b815481529060010190602001808311610d0d57829003601f168201915b505050505081565b6000600360149054906101000a900460ff16151515610d5057600080fd5b610d5a8383611435565b905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e4557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610e8157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561107057600080fd5b6000821180156110bf5750600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211155b15156110ca57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561115557600080fd5b6111a782600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113fe90919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061123c82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461141790919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061130e82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113fe90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600082821115151561140c57fe5b818303905092915050565b600080828401905083811015151561142b57fe5b8091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561147257600080fd5b6000821180156114c15750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211155b15156114cc57600080fd5b61151e82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113fe90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115b382600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461141790919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050929150505600a165627a7a7230582073e9f4f7859326b533926c0319dc2b13cf348d9454abc68f9133e44729fb60230029") </code>
<storage> TOKEN_STORAGE => _ </storage>
<origStorage> TOKEN_STORAGE => _ </origStorage>
<nonce> TOKEN_NONCE => _ </nonce>
</account>
        <account>
          <acctID> THIS </acctID>
          <balance> INIT_BALANCE => _ </balance>
          <code> #parseByteStack("0x606060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063894922e914610046575b600080fd5b341561005157600080fd5b6100c4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506100c6565b005b6000806000806100d4610808565b6000806000803098508b73ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415151561011857600080fd5b8a73ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415151561015357600080fd5b8a73ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff161415151561018e57600080fd5b8c73ffffffffffffffffffffffffffffffffffffffff166370a082318a6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561023157600080fd5b6102c65a03f1151561024257600080fd5b5050506040518051905097508c73ffffffffffffffffffffffffffffffffffffffff166370a082318d6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156102f157600080fd5b6102c65a03f1151561030257600080fd5b5050506040518051905096508c73ffffffffffffffffffffffffffffffffffffffff166370a082318c6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156103b157600080fd5b6102c65a03f115156103c257600080fd5b50505060405180519050955060026040518059106103dd5750595b908082528060200260200182016040525094508b85600081518110151561040057fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508a85600181518110151561044c57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508c73ffffffffffffffffffffffffffffffffffffffff166383f12fec868c6000604051602001526040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015610523578082015181840152602081019050610508565b505050509050019350505050602060405180830381600087803b151561054857600080fd5b6102c65a03f1151561055957600080fd5b50505060405180519050935083156107f9578c73ffffffffffffffffffffffffffffffffffffffff166370a082318a6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561060e57600080fd5b6102c65a03f1151561061f57600080fd5b5050506040518051905092508c73ffffffffffffffffffffffffffffffffffffffff166370a082318d6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156106ce57600080fd5b6102c65a03f115156106df57600080fd5b5050506040518051905091508c73ffffffffffffffffffffffffffffffffffffffff166370a082318c6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561078e57600080fd5b6102c65a03f1151561079f57600080fd5b505050604051805190509050898a890303831415156107ba57fe5b898701821415156107c757fe5b898601811415156107d457fe5b8783111515156107e057fe5b8682101515156107ec57fe5b8581101515156107f857fe5b5b50505050505050505050505050565b6020604051908101604052806000815250905600a165627a7a7230582057b7cc0a6f2c96a2bcf084e3ed416544bd2dc81c0c57730b4bd0cd0260cbff680029") </code>
          <storage> M => _ </storage>
          <origStorage> M => _ </origStorage>
          <nonce> INIT_NONCE => _ </nonce>
        </account>
        // precompiled account for ECREC
        <account>
          <acctID> 1 </acctID>
          <balance> 0 </balance>
          <code> .WordStack </code>
          <storage> .Map </storage>
          <origStorage> .Map </origStorage>
          <nonce> 0 </nonce>
        </account>
        // precompiled account for SHA256
        <account>
          <acctID> 2 </acctID>
          <balance> 0 </balance>
          <code> .WordStack </code>
          <storage> .Map </storage>
          <origStorage> .Map </origStorage>
          <nonce> 0 </nonce>
        </account>
        // precompiled account for RIP160
        <account>
          <acctID> 3 </acctID>
          <balance> 0 </balance>
          <code> .WordStack </code>
          <storage> .Map </storage>
          <origStorage> .Map </origStorage>
          <nonce> 0 </nonce>
        </account>
        // precompiled account for ID
        <account>
          <acctID> 4 </acctID>
          <balance> 0 </balance>
          <code> .WordStack </code>
          <storage> .Map </storage>
          <origStorage> .Map </origStorage>
          <nonce> 0 </nonce>
        </account>
        // precompiled account for MODEXP
        <account>
          <acctID> 5 </acctID>
          <balance> 0 </balance>
          <code> .WordStack </code>
          <storage> .Map </storage>
          <origStorage> .Map </origStorage>
          <nonce> 0 </nonce>
        </account>
        // precompiled account for ECADD
        <account>
          <acctID> 6 </acctID>
          <balance> 0 </balance>
          <code> .WordStack </code>
          <storage> .Map </storage>
          <origStorage> .Map </origStorage>
          <nonce> 0 </nonce>
        </account>
        // precompiled account for ECMUL
        <account>
          <acctID> 7 </acctID>
          <balance> 0 </balance>
          <code> .WordStack </code>
          <storage> .Map </storage>
          <origStorage> .Map </origStorage>
          <nonce> 0 </nonce>
        </account>
        // precompiled account for ECPAIRING
        <account>
          <acctID> 8 </acctID>
          <balance> 0 </balance>
          <code> .WordStack </code>
          <storage> .Map </storage>
          <origStorage> .Map </origStorage>
          <nonce> 0 </nonce>
        </account>
        ...
      </accounts>
      <txOrder> _ </txOrder>
      <txPending> _ </txPending>
      <messages> _ </messages>
    </network>
  </ethereum>
</kevm>
  requires #rangeAddress(ORIGIN_ID)
   // builtins
   andBool #rangeUInt(256, NOW)
   andBool #rangeUInt(128, BLOCK_NUM) // Solidity
   // conditions
andBool #range(0 <= CALL_DEPTH < 1024)
andBool #regularAddress(PETERSBURG, THIS)
// types
andBool #rangeAddress(THIS)
andBool #rangeAddress(MSG_SENDER)
andBool #rangeUInt(256, CALL_DATA_SIZE)
andBool #rangeUInt(256, CALL_DATA)
andBool #rangeUInt(256, CALL_VALUE)
andBool #rangeUInt(256, INIT_BALANCE)
andBool #rangeUInt(256, INIT_NONCE)
andBool isStorage(M)
andBool #rangeAddress(TOKEN)
andBool #regularAddress(PETERSBURG, TOKEN)
andBool TOKEN =/=Int THIS
andBool #rangeUInt(256, TOKEN_BALANCE)
andBool #rangeUInt(256, TOKEN_NONCE)
andBool isStorage(TOKEN_STORAGE)
andBool #rangeAddress(A2)
andBool #rangeAddress(A3)
andBool #rangeUInt(256, VALUE)
//
andBool CALL_VALUE ==Int 0
  ensures true
   andBool ( SC ==K EVMC_SUCCESS orBool SC ==K EVMC_REVERT )



endmodule

